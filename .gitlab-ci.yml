image: gitlab.icp.uni-stuttgart.de:4567/espressomd/docker/ubuntu:18.04

stages:
  - permission
  - prepare
  - build
  - additional_checks
  - deploy
  - result

variables:
  GIT_SUBMODULE_STRATEGY: recursive

check_permission:
  stage: permission
  only:
    - /.*external.*/
  when: manual
  allow_failure: false
  script:
    - exit 0
  tags:
    - linux

status_pending:
  stage: prepare
  script: bash maintainer/gh_post_status.sh pending
  tags:
    - linux

### Builds without CUDA

default:
  stage: build
  script:
    - export with_cuda=false myconfig=default with_coverage=true
    - bash maintainer/CI/build_cmake.sh
  tags:
    - docker
    - linux

maxset:
  stage: build
  script:
    - export with_cuda=false myconfig=maxset with_coverage=true
    - bash maintainer/CI/build_cmake.sh
  tags:
    - docker
    - linux

maxset-python3:
  stage: build
  image: gitlab.icp.uni-stuttgart.de:4567/espressomd/docker/ubuntu-python3:18.04
  script:
    - export myconfig=maxset with_coverage=true python_version=3
    - bash maintainer/CI/build_cmake.sh
  tags:
    - docker
    - linux

nocheckmaxset:
  stage: build
  script:
    - export with_cuda=false myconfig=nocheck-maxset make_check=false
    - bash maintainer/CI/build_cmake.sh
  tags:
    - docker
    - linux

### Builds with different Distributions

#debian:8 removed: similar to ubuntu:1404

debian:9:
  stage: build
  image: gitlab.icp.uni-stuttgart.de:4567/espressomd/docker/$CI_JOB_NAME
  script:
    - export with_cuda=false
    - export myconfig=maxset make_check=false
    - bash maintainer/CI/build_cmake.sh
  tags:
    - docker
    - linux

opensuse:42.3:
  stage: build
  image: gitlab.icp.uni-stuttgart.de:4567/espressomd/docker/$CI_JOB_NAME
  script:
    - export with_cuda=false myconfig=maxset make_check=false
    - bash maintainer/CI/build_cmake.sh
  tags:
    - docker
    - linux

opensuse:15.0:
  stage: build
  image: gitlab.icp.uni-stuttgart.de:4567/espressomd/docker/$CI_JOB_NAME
  script:
    - export with_cuda=false myconfig=maxset make_check=false
    - bash maintainer/CI/build_cmake.sh
  tags:
    - docker
    - linux

centos:7:
  stage: build
  image: gitlab.icp.uni-stuttgart.de:4567/espressomd/docker/$CI_JOB_NAME
  script:
    - export with_cuda=false myconfig=maxset make_check=false
    - bash maintainer/CI/build_cmake.sh
  tags:
    - docker
    - linux

fedora:
  stage: build
  image: gitlab.icp.uni-stuttgart.de:4567/espressomd/docker/centos:next
  script:
    - export with_cuda=false myconfig=maxset make_check=false
    - bash maintainer/CI/build_cmake.sh
  tags:
    - docker
    - linux

#ubuntu:1404 not needed: used in cuda:8.0
#ubuntu:1604 not needed: used in cuda:9.0
#ubuntu:1804 not needed: default used in non-CUDA builds

### Builds with CUDA

cuda-shanchen:
  stage: build
  image: gitlab.icp.uni-stuttgart.de:4567/espressomd/docker/cuda:9.0
  script:
    - export myconfig=shanchen with_coverage=true python_version=3
    - bash maintainer/cuda_build.sh
  tags:
    - docker
    - linux
    - cuda

cuda-maxset:
  stage: build
  image: gitlab.icp.uni-stuttgart.de:4567/espressomd/docker/cuda:9.0
  script:
    - export myconfig=maxset with_coverage=true python_version=3
    - bash maintainer/cuda_build.sh
  artifacts:
    paths:
    - build/
    expire_in: 1 week
  tags:
    - docker
    - linux
    - cuda

cuda8-maxset:
  stage: build
  image: gitlab.icp.uni-stuttgart.de:4567/espressomd/docker/cuda:8.0
  script:
    - export myconfig=maxset with_coverage=true
    - bash maintainer/cuda_build.sh
  artifacts:
    paths:
    - build/
    expire_in: 1 week
  tags:
    - docker
    - linux
    - cuda

empty:
  stage: build
  image: gitlab.icp.uni-stuttgart.de:4567/espressomd/docker/cuda:9.0
  script:
    - export myconfig=empty python_version=3
    - bash maintainer/CI/build_cmake.sh
  tags:
    - docker
    - linux
    - cuda

### Builds with OS X

osx:
  stage: build
  script:
    - export myconfig=maxset with_cuda=false
    - bash maintainer/CI/build_cmake.sh
  tags:
    - mac

osx-python3:
  stage: build
  script:
    - export myconfig=maxset with_cuda=false python_version=3
    - bash maintainer/CI/build_cmake.sh
  tags:
    - mac

osx-cuda:
  stage: build
  script:
    - export myconfig=maxset with_cuda=true make_check=false
    - bash maintainer/CI/build_cmake.sh
  tags:
    - mac

### Builds with different compilers

clang:6.0:
  stage: build
  image: gitlab.icp.uni-stuttgart.de:4567/espressomd/docker/$CI_JOB_NAME
  script:
    - export myconfig=maxset with_coverage=false with_static_analysis=true with_asan=true with_ubsan=true
    - bash maintainer/cuda_build.sh
  tags:
    - docker
    - linux
    - cuda
    - ptrace

intel:15:
  stage: build
  image: gitlab.icp.uni-stuttgart.de:4567/espressomd/docker/$CI_JOB_NAME
  script:
    - export myconfig=maxset with_coverage=false I_MPI_SHM_LMT=shm
    - bash maintainer/cuda_build.sh
  tags:
    - docker
    - linux
    - cuda

intel:17:
  stage: build
  image: gitlab.icp.uni-stuttgart.de:4567/espressomd/docker/$CI_JOB_NAME
  script:
    - export myconfig=maxset with_coverage=false I_MPI_SHM_LMT=shm
    - export cxx_flags=-O2
    - bash maintainer/cuda_build.sh
  tags:
    - docker
    - linux
    - cuda

### Other builds

style:
  stage: additional_checks
  image: gitlab.icp.uni-stuttgart.de:4567/espressomd/docker/clang:6.0
  dependencies: []
  before_script:
    - git submodule deinit .
  script:
    - maintainer/CI/fix_style.sh
    - git --no-pager diff > style.patch
    - git diff-index --quiet HEAD -- || (echo "Failed style check. Download $CI_JOB_URL/artifacts/raw/style.patch to see which changes are necessary." && exit 1)
    - echo "Passed style check"
  tags:
    - docker
    - linux
  variables:
    GIT_SUBMODULE_STRATEGY: none
  artifacts:
    paths:
    - style.patch
    expire_in: 1 week
    when: on_failure

check_sphinx:
  stage: additional_checks
  image: gitlab.icp.uni-stuttgart.de:4567/espressomd/docker/cuda:8.0
  dependencies:
  - cuda8-maxset
  when: on_success
  script:
    - cd ${CI_PROJECT_DIR}; cd build && find ./ -exec touch -c -t 203901010000 {} \; && make sphinx
  tags:
    - docker
    - linux
    - cuda

check_with_odd_no_of_processors:
  stage: additional_checks
  image: gitlab.icp.uni-stuttgart.de:4567/espressomd/docker/cuda:9.0
  when: on_success
  dependencies:
  - cuda-maxset
  script:
    - export myconfig=maxset with_coverage=true python_version=3 build_procs=3 check_procs=3 check_odd_only=true
    - bash maintainer/cuda_build.sh
  tags:
    - docker
    - linux
    - cuda

deploy_documentation:
  stage: deploy
  image: gitlab.icp.uni-stuttgart.de:4567/espressomd/docker/cuda:8.0
  only:
    - python
  dependencies:
    - cuda8-maxset
  before_script:
    - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )'
    - eval $(ssh-agent -s)
    - ssh-add <(echo "$SSH_PRIVATE_KEY")
    - mkdir -p ${HOME}/.ssh && chmod 700 ${HOME}/.ssh
    - echo "$SSH_PRIVATE_KEY" > ${HOME}/.ssh/espresso_rsa && chmod 600 ${HOME}/.ssh/espresso_rsa
    - echo "$SSH_PUBLIC_KEY" > ${HOME}/.ssh/espresso_rsa.pub && chmod 600 ${HOME}/.ssh/espresso_rsa.pub
    - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'
  script:
    - cd ${CI_PROJECT_DIR}/build && find ./ -exec touch -c -t 203901010000 {} \; && make sphinx && make doxygen && cd doc/sphinx/html &&
      rsync -avz --delete -e "ssh -i ${HOME}/.ssh/espresso_rsa" ./* espresso@elk.icp.uni-stuttgart.de:/home/espresso/public_html/html/doc
    - cd ../../doxygen/html &&
      rsync -avz --delete -e "ssh -i ${HOME}/.ssh/espresso_rsa" ./* espresso@elk.icp.uni-stuttgart.de:/home/espresso/public_html/html/dox
  tags:
    - docker
    - linux
    - cuda

status_success:
  stage: result
  script: bash maintainer/gh_post_status.sh success
  when: on_success
  tags:
    - linux
  dependencies: []

status_failure:
  stage: result
  script: bash maintainer/gh_post_status.sh failure
  when: on_failure
  tags:
    - linux
  dependencies: []

