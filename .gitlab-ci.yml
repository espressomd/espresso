image: gitlab.icp.uni-stuttgart.de:4567/espressomd/docker/ubuntu:18.04

stages:
  - permission
  - prepare
  - build
  - test
  - deploy
  - result

variables:
  GIT_SUBMODULE_STRATEGY: recursive
  CCACHE_DIR: /cache
  CCACHE_MAXSIZE: 100G
  with_ccache: "true"

check_permission:
  stage: permission
  only:
    - /.*external.*/
  when: manual
  allow_failure: false
  script:
    - exit 0
  tags:
    - linux

status_pending:
  stage: prepare
  script: bash maintainer/gh_post_status.sh pending
  tags:
    - linux

style:
  stage: prepare
  image: gitlab.icp.uni-stuttgart.de:4567/espressomd/docker/clang:6.0
  dependencies: []
  before_script:
    - git submodule deinit .
  script:
    - maintainer/CI/fix_style.sh
    - git --no-pager diff > style.patch
    - git diff-index --quiet HEAD -- || (echo "Failed style check. Download $CI_JOB_URL/artifacts/raw/style.patch to see which changes are necessary." && exit 1)
    - echo "Passed style check"
  tags:
    - docker
    - linux
  variables:
    GIT_SUBMODULE_STRATEGY: none
  artifacts:
    paths:
    - style.patch
    expire_in: 1 week
    when: on_failure

### Builds without CUDA

.default:
  variables:
    with_cuda: "false"
    myconfig: "default"
    with_coverage: "true"
  script:
    - bash maintainer/CI/build_cmake.sh
  artifacts:
    paths:
    - build/
    expire_in: 1 week
  tags:
    - docker
    - linux

default:build:
  extends: .default
  variables:
    make_check: "false"
  stage: build

default:test:
  stage: test
  extends: .default
  variables:
    make_check: "true"
  dependencies:
    - default:build

maxset:build:
  extends: .default
  stage: build
  variables:
    myconfig: "maxset"

maxset:test:
  extends: .default
  stage: test
  variables:
    myconfig: "maxset"
    make_check: "true"
  dependencies:
    - maxset:build

maxset-python3:build:
  extends: .default
  image: gitlab.icp.uni-stuttgart.de:4567/espressomd/docker/ubuntu-python3:18.04
  stage: build
  variables:
    myconfig: "maxset"
    python_version: 3

maxset-python3:test:
  extends: .default
  image: gitlab.icp.uni-stuttgart.de:4567/espressomd/docker/ubuntu-python3:18.04
  stage: test
  variables:
    myconfig: "maxset"
    make_check: "true"
    python_version: 3
  dependencies:
    - maxset-python3:build

### Builds with CUDA

.cuda:
  image: gitlab.icp.uni-stuttgart.de:4567/espressomd/docker/cuda:9.0
  variables:
    with_coverage: "true"
    with_cuda: "true"
    build_procs: 4
  script:
    - nvidia-smi
    - bash maintainer/CI/build_cmake.sh
  artifacts:
    paths:
    - build/
    expire_in: 1 week
  tags:
    - docker
    - linux
    - cuda

cuda-shanchen:
  extends: .cuda
  stage: build
  variables:
    myconfig: "shanchen"
    make_check: "false"

cuda-maxset:build:
  extends: .cuda
  stage: build
  variables:
    make_check: "false"

cuda-maxset:test:
  extends: .cuda
  stage: test
  dependencies:
    - cuda-maxset:build

cuda8-maxset:build:
  extends: .cuda
  stage: build
  image: gitlab.icp.uni-stuttgart.de:4567/espressomd/docker/cuda:8.0
  variables:
    make_check: "false"

cuda8-maxset:test:
  extends: .cuda
  stage: test
  image: gitlab.icp.uni-stuttgart.de:4567/espressomd/docker/cuda:8.0
  variables:
    make_check: "true"
  dependencies:
    - cuda8-maxset:build

empty:
  stage: build
  image: gitlab.icp.uni-stuttgart.de:4567/espressomd/docker/cuda:9.0
  script:
    - export myconfig=empty python_version=3
    - bash maintainer/CI/build_cmake.sh
  tags:
    - docker
    - linux
    - cuda

ubuntu:wo-dependencies:
  stage: build
  image: gitlab.icp.uni-stuttgart.de:4567/espressomd/docker/$CI_JOB_NAME
  script:
    - export myconfig=maxset make_check=false
    - bash maintainer/CI/build_cmake.sh
  tags:
    - docker
    - linux



### Builds with ROCm

rocm-maxset:
  stage: build
  image: gitlab.icp.uni-stuttgart.de:4567/espressomd/docker/rocm:latest
  script:
    - export myconfig=maxset make_check=false
    - bash maintainer/CI/build_cmake.sh
  tags:
    - amdgpu

### Builds on different architectures

.arch_template: &arch_definition
  stage: build
  image: gitlab.icp.uni-stuttgart.de:4567/espressomd/docker/$CI_JOB_NAME
  script:
    - export with_cuda=false
    - export OMPI_MCA_btl_vader_single_copy_mechanism=none
    - export myconfig=maxset
    - bash maintainer/CI/build_cmake.sh
  tags:
    - docker
    - linux
  except:
    - /^PR-.*/

ubuntu:arm64:
  <<: *arch_definition

ubuntu:armhf:
  <<: *arch_definition

ubuntu:i386:
  <<: *arch_definition

ubuntu:ppc64le:
  <<: *arch_definition

ubuntu:s390x:
  <<: *arch_definition

### Builds with OS X

osx:
  stage: build
  script:
    - export with_ccache=false myconfig=maxset with_cuda=false
    - bash maintainer/CI/build_cmake.sh
  tags:
    - mac

osx-python3:
  stage: build
  script:
    - export with_ccache=false myconfig=maxset with_cuda=false python_version=3
    - bash maintainer/CI/build_cmake.sh
  tags:
    - mac

osx-cuda:
  stage: build
  script:
    - export with_ccache=false myconfig=maxset with_cuda=true make_check=false
    - bash maintainer/CI/build_cmake.sh
  tags:
    - mac

### Builds with different compilers

clang:6.0:
  stage: build
  image: gitlab.icp.uni-stuttgart.de:4567/espressomd/docker/$CI_JOB_NAME
  script:
    - export myconfig=maxset with_coverage=false with_static_analysis=true with_asan=true with_ubsan=true
    - bash maintainer/cuda_build.sh
  tags:
    - docker
    - linux
    - cuda
    - ptrace

intel:15:
  stage: build
  image: gitlab.icp.uni-stuttgart.de:4567/espressomd/docker/$CI_JOB_NAME
  script:
    - export myconfig=maxset with_coverage=false I_MPI_SHM_LMT=shm
    - bash maintainer/cuda_build.sh
  tags:
    - docker
    - linux
    - cuda

intel:17:
  stage: build
  image: gitlab.icp.uni-stuttgart.de:4567/espressomd/docker/$CI_JOB_NAME
  script:
    - export myconfig=maxset with_coverage=false I_MPI_SHM_LMT=shm
    - export cxx_flags=-O2
    - bash maintainer/cuda_build.sh
  tags:
    - docker
    - linux
    - cuda

check_sphinx:
  stage: test
  image: gitlab.icp.uni-stuttgart.de:4567/espressomd/docker/cuda:8.0
  dependencies:
  - cuda8-maxset:build
  when: on_success
  script:
    - cd ${CI_PROJECT_DIR}; cd build && find ./ -exec touch -c -t 203901010000 {} \; && make sphinx
  tags:
    - docker
    - linux
    - cuda

check_with_odd_no_of_processors:
  extends: .cuda
  stage: test
  when: on_success
  dependencies:
  - cuda-maxset:build
  variables:
    make_check: "true"
    build_procs: 3
    check_procs: 3
    check_odd_only: "true"

deploy_documentation:
  stage: deploy
  image: gitlab.icp.uni-stuttgart.de:4567/espressomd/docker/cuda:8.0
  only:
    - python
  dependencies:
    - cuda8-maxset:build
  before_script:
    - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )'
    - eval $(ssh-agent -s)
    - ssh-add <(echo "$SSH_PRIVATE_KEY")
    - mkdir -p ${HOME}/.ssh && chmod 700 ${HOME}/.ssh
    - echo "$SSH_PRIVATE_KEY" > ${HOME}/.ssh/espresso_rsa && chmod 600 ${HOME}/.ssh/espresso_rsa
    - echo "$SSH_PUBLIC_KEY" > ${HOME}/.ssh/espresso_rsa.pub && chmod 600 ${HOME}/.ssh/espresso_rsa.pub
    - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'
  script:
    - cd ${CI_PROJECT_DIR}/build && find ./ -exec touch -c -t 203901010000 {} \; && make sphinx && make doxygen && cd doc/sphinx/html &&
      rsync -avz --delete -e "ssh -i ${HOME}/.ssh/espresso_rsa" ./* espresso@elk.icp.uni-stuttgart.de:/home/espresso/public_html/html/doc
    - cd ../../doxygen/html &&
      rsync -avz --delete -e "ssh -i ${HOME}/.ssh/espresso_rsa" ./* espresso@elk.icp.uni-stuttgart.de:/home/espresso/public_html/html/dox
  tags:
    - docker
    - linux
    - cuda

status_success:
  stage: result
  script: bash maintainer/gh_post_status.sh success
  when: on_success
  tags:
    - linux
  dependencies: []

status_failure:
  stage: result
  script: bash maintainer/gh_post_status.sh failure
  when: on_failure
  tags:
    - linux
  dependencies: []
