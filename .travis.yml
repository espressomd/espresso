language: cpp

before_install:
 - sudo apt-get clean
 - sudo apt-get update
 - sudo apt-get install tcl-dev libhdf5-serial-dev build-essential python-numpy python-pip pep8
 - sudo -H PATH="${PATH}:/usr/local/clang-3.4/bin" pip install cython --upgrade 
 - if [ "$with_mpi" != false ]; then sudo apt-get install libopenmpi-dev openmpi-bin; fi
 - if [ "$with_fftw" != false ]; then sudo apt-get install libfftw3-dev; fi
 - pip install --user codecov

env:
  - myconfig=default
  - myconfig=maxset
  - myconfig=maxset-gaussrandom
  - myconfig=maxset-gaussrandomcut
  - myconfig=molcut
  - myconfig=rest1
  - myconfig=rest2
  - make_check=false myconfig=nocheck-maxset
  - with_fftw=false with_mpi=false myconfig=maxset

compiler:
  - gcc

matrix:
  include:
    - compiler: clang
      env: with_mpi=false myconfig=default
    - compiler: clang
      env: with_mpi=false myconfig=maxset
    - compiler: clang
      env: with_mpi=false myconfig=molcut
    - compiler: clang
      env: with_mpi=false myconfig=rest1
    - compiler: clang
      env: with_mpi=false myconfig=rest2
    - compiler: clang
      env: with_mpi=false make_check=false myconfig=nocheck-maxset 
    - compiler: clang
      env: with_mpi=false myconfig=maxset without-cuda
    - compiler: clang
      env: OMPI_CC=clang OMPI_CXX=clang++ myconfig=default
    - compiler: clang
      env: OMPI_CC=clang OMPI_CXX=clang++ myconfig=maxset
    - compiler: clang
      env: OMPI_CC=clang OMPI_CXX=clang++ myconfig=molcut
    - compiler: clang
      env: OMPI_CC=clang OMPI_CXX=clang++ myconfig=rest1
    - compiler: clang
      env: OMPI_CC=clang OMPI_CXX=clang++ myconfig=rest2
    - compiler: clang
      env: OMPI_CC=clang OMPI_CXX=clang++ make_check=false myconfig=nocheck-maxset 
    - compiler: clang
      env: OMPI_CC=clang OMPI_CXX=clang++ myconfig=maxset without-cuda
  allow_failures:
    - compiler: clang

script: ./maintainer/travis/build.sh

after_success:
 - codecov
